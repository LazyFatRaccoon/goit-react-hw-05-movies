{"version":3,"file":"static/js/746.f89a4e03.chunk.js","mappings":"8NA4BA,EAxBkB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,eACnB,OACE,SAAC,IAAD,CAAKC,EAAE,IAAIC,SAAS,IAApB,UACE,SAAC,KAAD,CACEC,cAAe,CAAEC,OAAQ,IACzBC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBP,EAAeM,EAAOF,QACtBG,GACD,EALH,UAOE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,CAAEN,SAAU,QAAWO,KAAK,SAASC,KAAK,OAAOC,UAAQ,EAACC,aAAa,SACrF,SAAC,KAAD,CAAcH,KAAK,eACnB,SAAC,EAAAI,EAAD,CAAGX,SAAS,IAAID,EAAE,IAAIa,GAAG,SAASJ,KAAK,SAAvC,0BAKT,E,iDCiBD,EAhCe,WAAO,IAAD,EACbK,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACY,KAAhBF,IAAoBG,EAAAA,EAAAA,IAAgB,EAAGH,GAAaI,KAAKR,EAC9D,GAAE,CAACI,IAMJ,OACE,6BACE,SAAC,EAAD,CAAWvB,eANM,SAAA4B,GACnBN,EAA0B,KAAVM,EAAe,CAAEC,MAAOD,GAAU,CAAC,EACpD,IAKIV,EAAOY,OAAS,IACf,wBACGZ,EAAOa,KAAI,SAAAC,GAAK,OACf,SAAC,IAAD,CAAKlB,GAAG,KAAKmB,EAAE,IAAf,UACE,SAAC,KAAD,CAAYC,GAAE,UAAKF,EAAMG,IAAMC,MAAO,CAAEC,KAAMtB,GAA9C,SACGiB,EAAMM,SAFaN,EAAMG,GADf,QAW1B,C","sources":["components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Div,P } from 'components/Wrappers/Wrappers';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types'\n\nconst SearchBar = ({ onSubmitFilter }) => {\n  return (\n    <Div m=\"4\" fontSize='m'>\n      <Formik\n        initialValues={{ search: '' }}\n        onSubmit={(values, { resetForm }) => {\n          onSubmitFilter(values.search);\n          resetForm();\n        }}\n      >\n        <Form>\n          <Field style={{ fontSize: \"2rem\" }}  name=\"search\" type=\"text\" required autoComplete='off' />\n          <ErrorMessage name=\"firstName\" />\n          <P fontSize='l' m='1' as='button' type=\"submit\">Search</P>\n        </Form>\n      </Formik>\n    </Div>\n  );\n};\n\nSearchBar.propTypes = {\n    onSubmitFilter: PropTypes.func.isRequired,\n}\n\nexport default SearchBar;\n","import SearchBar from '../../components/SearchBar/SearchBar';\nimport { getSearchMovies } from 'API/movieAPI';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Div } from 'components/Wrappers/Wrappers';\nimport { StyledLink } from '../../components/commonStyled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParams = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryParams !== '') getSearchMovies(1, queryParams).then(setMovies);\n  }, [queryParams]);\n\n  const submitFilter = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmitFilter={submitFilter} />\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <Div as=\"li\" p=\"2\" key={movie.id}>\n              <StyledLink to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </Div>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["onSubmitFilter","m","fontSize","initialValues","search","onSubmit","values","resetForm","style","name","type","required","autoComplete","P","as","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","getSearchMovies","then","value","query","length","map","movie","p","to","id","state","from","title"],"sourceRoot":""}